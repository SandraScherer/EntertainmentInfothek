CREATE TABLE Status (
  ID           text NOT NULL, 
  EnglishTitle text, 
  GermanTitle  text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Type (
  ID           text NOT NULL, 
  EnglishTitle text, 
  GermanTitle  text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Connection (
  ID           text NOT NULL, 
  Title        text, 
  ConnectionID text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(ConnectionID) REFERENCES Connection(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Genre (
  ID           text NOT NULL, 
  EnglishTitle text, 
  GermanTitle  text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Country (
  ID                text NOT NULL, 
  OriginalShortName text, 
  OriginalFullName  text, 
  EnglishShortName  text, 
  EnglishFullName   text, 
  GermanShortName   text, 
  GermanFullName    text, 
  Details           text, 
  Notes             text, 
  StatusID          text, 
  LastUpdated       text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Language (
  ID           text NOT NULL, 
  OriginalName text, 
  EnglishName  text, 
  GermanName   text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Edition (
  ID           text NOT NULL, 
  EnglishTitle text, 
  GermanTitle  text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE SoundMix (
  ID           text NOT NULL, 
  EnglishTitle text, 
  GermanTitle  text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Color (
  ID           text NOT NULL, 
  EnglishTitle text, 
  GermanTitle  text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE AspectRatio (
  ID          text NOT NULL, 
  Ratio       text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Camera (
  ID          text NOT NULL, 
  Name        text, 
  Lenses      text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Laboratory (
  ID          text NOT NULL, 
  Name        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE FilmFormat (
  ID          text NOT NULL, 
  Format      text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE CinematographicProcess (
  ID          text NOT NULL, 
  Name        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Image (
  ID          text NOT NULL, 
  FileName    text, 
  Description text, 
  TypeID      text, 
  CountryID   text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(TypeID) REFERENCES Type(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CountryID) REFERENCES Country(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Image_Source (
  ID          text NOT NULL, 
  ImageID     text, 
  CompanyID   text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(ImageID) REFERENCES Image(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CompanyID) REFERENCES Company(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Certification (
  ID          text NOT NULL, 
  Name        text, 
  ImageID     text, 
  CountryID   text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(ImageID) REFERENCES Image(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CountryID) REFERENCES Country(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Location (
  ID          text NOT NULL, 
  Location    text, 
  CountryID   text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(CountryID) REFERENCES Country(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Company (
  ID          text NOT NULL, 
  Name        text, 
  NameAddOn   text, 
  TypeID      text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(TypeID) REFERENCES Type(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Person (
  ID                text NOT NULL, 
  FirstName         text, 
  LastName          text, 
  NameAddOn         text, 
  BirthName         text, 
  DateOfBirth       text, 
  LocationOfBirthID text, 
  DateOfDeath       text, 
  LocationOfDeathID text, 
  CauseOfDeath      text, 
  EmployerID        text, 
  TypeID            text, 
  Details           text, 
  Notes             text, 
  StatusID          text, 
  LastUpdated       text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(LocationOfBirthID) REFERENCES Location(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(LocationOfDeathID) REFERENCES Location(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(EmployerID) REFERENCES Company(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(TypeID) REFERENCES Type(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Text (
  ID          text NOT NULL, 
  Content     text, 
  LanguageID  text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(LanguageID) REFERENCES Language(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Text_Author (
  ID          text NOT NULL, 
  TextID      text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(TextID) REFERENCES Text(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Text_Source (
  ID          text NOT NULL, 
  TextID      text, 
  CompanyID   text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(TextID) REFERENCES Text(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CompanyID) REFERENCES Company(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Award (
  ID          text NOT NULL, 
  Name        text, 
  PresenterID text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(PresenterID) REFERENCES Company(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Weblink (
  ID           text NOT NULL, 
  URL          text, 
  EnglishTitle text, 
  GermanTitle  text, 
  LanguageID   text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(LanguageID) REFERENCES Language(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE "User" (
  ID          text NOT NULL, 
  UserName    text, 
  EMail       text, 
  PersonID    text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Priority (
  ID           text NOT NULL, 
  EnglishTitle text, 
  GermanTitle  text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie (
  ID                 text NOT NULL, 
  OriginalTitle      text, 
  EnglishTitle       text, 
  GermanTitle        text, 
  TypeID             text, 
  ReleaseDate        text, 
  LogoID             text, 
  Budget             text, 
  WorldwideGross     text, 
  WorldwideGrossDate text, 
  CastStatusID       text, 
  CrewStatusID       text, 
  ConnectionID       text, 
  Details            text, 
  Notes              text, 
  StatusID           text, 
  LastUpdated        text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(TypeID) REFERENCES Type(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(LogoID) REFERENCES Image(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CastStatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CrewStatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(ConnectionID) REFERENCES Connection(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Genre (
  ID          text NOT NULL, 
  MovieID     text, 
  GenreID     text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(GenreID) REFERENCES Genre(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Country (
  ID          text NOT NULL, 
  MovieID     text, 
  CountryID   text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CountryID) REFERENCES Country(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Language (
  ID          text NOT NULL, 
  MovieID     text, 
  LanguageID  text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(LanguageID) REFERENCES Language(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Certification (
  ID              text NOT NULL, 
  MovieID         text, 
  CertificationID text, 
  Details         text, 
  Notes           text, 
  StatusID        text, 
  LastUpdated     text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CertificationID) REFERENCES Certification(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Runtime (
  ID          text NOT NULL, 
  MovieID     text, 
  Runtime     integer(10), 
  EditionID   text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(EditionID) REFERENCES Edition(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_SoundMix (
  ID          text NOT NULL, 
  MovieID     text, 
  SoundMixID  text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(SoundMixID) REFERENCES SoundMix(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Color (
  ID          text NOT NULL, 
  MovieID     text, 
  ColorID     text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(ColorID) REFERENCES Color(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_AspectRatio (
  ID            text NOT NULL, 
  MovieID       text, 
  AspectRatioID text, 
  Details       text, 
  Notes         text, 
  StatusID      text, 
  LastUpdated   text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(AspectRatioID) REFERENCES AspectRatio(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Camera (
  ID          text NOT NULL, 
  MovieID     text, 
  CameraID    text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CameraID) REFERENCES Camera(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Laboratory (
  ID           text NOT NULL, 
  MovieID      text, 
  LaboratoryID text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(LaboratoryID) REFERENCES Laboratory(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_FilmLength (
  ID          text NOT NULL, 
  MovieID     text, 
  Length      text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_NegativeFormat (
  ID           text NOT NULL, 
  MovieID      text, 
  FilmFormatID text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(FilmFormatID) REFERENCES FilmFormat(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_PrintedFilmFormat (
  ID           text NOT NULL, 
  MovieID      text, 
  FilmFormatID text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(FilmFormatID) REFERENCES FilmFormat(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_CinematographicProcess (
  ID                       text NOT NULL, 
  MovieID                  text, 
  CinematographicProcessID text, 
  Details                  text, 
  Notes                    text, 
  StatusID                 text, 
  LastUpdated              text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CinematographicProcessID) REFERENCES CinematographicProcess(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Poster (
  ID          text NOT NULL, 
  MovieID     text, 
  ImageID     text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(ImageID) REFERENCES Image(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Cover (
  ID          text NOT NULL, 
  MovieID     text, 
  ImageID     text, 
  EditionID   text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(ImageID) REFERENCES Image(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(EditionID) REFERENCES Edition(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Image (
  ID          text NOT NULL, 
  MovieID     text, 
  ImageID     text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(ImageID) REFERENCES Image(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_FilmingDate (
  ID          text NOT NULL, 
  MovieID     text, 
  StartDate   text, 
  EndDate     text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_ProductionDate (
  ID          text NOT NULL, 
  MovieID     text, 
  StartDate   text, 
  EndDate     text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_FilmingLocation (
  ID          text NOT NULL, 
  MovieID     text, 
  LocationID  text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(LocationID) REFERENCES Location(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_ProductionCompany (
  ID          text NOT NULL, 
  MovieID     text, 
  CompanyID   text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CompanyID) REFERENCES Company(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Distributor (
  ID          text NOT NULL, 
  MovieID     text, 
  CompanyID   text, 
  CountryID   text, 
  ReleaseDate text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CompanyID) REFERENCES Company(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CountryID) REFERENCES Country(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_SpecialEffectsCompany (
  ID          text NOT NULL, 
  MovieID     text, 
  CompanyID   text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CompanyID) REFERENCES Company(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_OtherCompany (
  ID          text NOT NULL, 
  MovieID     text, 
  CompanyID   text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CompanyID) REFERENCES Company(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Cast (
  ID             text NOT NULL, 
  MovieID        text, 
  ActorID        text, 
  GermanDubberID text, 
  Character      text, 
  CharacterID    text, 
  Details        text, 
  Notes          text, 
  StatusID       text, 
  LastUpdated    text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(ActorID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(GermanDubberID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CharacterID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Director (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Writer (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Producer (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Music (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Cinematography (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_FilmEditing (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Casting (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_ProductionDesign (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_ArtDirection (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_SetDecoration (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_CostumeDesign (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_MakeupDepartment (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_ProductionManagement (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_AssistantDirector (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_ArtDepartment (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_SoundDepartment (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_SpecialEffects (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Stunts (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_ElectricalDepartment (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_AnimationDepartment (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_CastingDepartment (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_CostumeDepartment (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_EditorialDepartment (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_LocationManagement (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_MusicDepartment (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_TransportationDepartment (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_OtherCrew (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Thanks (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Description (
  ID          text NOT NULL, 
  MovieID     text, 
  TextID      text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(TextID) REFERENCES Text(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Review (
  ID          text NOT NULL, 
  MovieID     text, 
  TextID      text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(TextID) REFERENCES Text(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Award (
  ID          text NOT NULL, 
  MovieID     text, 
  AwardID     text, 
  Category    text, 
  "Date"      text, 
  Winner      integer(10), 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(AwardID) REFERENCES Award(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_ContinuityDepartment (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Award_Person (
  ID            text NOT NULL, 
  Movie_AwardID text, 
  PersonID      text, 
  Role          text, 
  Details       text, 
  Notes         text, 
  StatusID      text, 
  LastUpdated   text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(Movie_AwardID) REFERENCES Movie_Award(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_VisualEffects (
  ID          text NOT NULL, 
  MovieID     text, 
  PersonID    text, 
  Role        text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PersonID) REFERENCES Person(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_Weblink (
  ID          text NOT NULL, 
  MovieID     text, 
  WeblinkID   text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(WeblinkID) REFERENCES Weblink(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Movie_User (
  ID           text NOT NULL, 
  MovieID      text, 
  UserID       text, 
  EditionID    text, 
  UserStatusID text, 
  PriorityID   text, 
  Explanation  text, 
  Details      text, 
  Notes        text, 
  StatusID     text, 
  LastUpdated  text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(MovieID) REFERENCES Movie(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(UserID) REFERENCES "User"(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(EditionID) REFERENCES Edition(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(UserStatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(PriorityID) REFERENCES Priority(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
  CREATE TABLE Series (
  ID                      text NOT NULL, 
  OriginalTitle           text, 
  EnglishTitle            text, 
  GermanTitle             text, 
  TypeID                  text, 
  ReleaseDateFirstEpisode text, 
  ReleaseDateLastEpisode  text,
  NoOfSeasons             text,
  NoOfEpisodes            text,
  Budget                  text, 
  WorldwideGross          text, 
  WorldwideGrossDate      text, 
  CastStatusID            text, 
  CrewStatusID            text, 
  ConnectionID            text, 
  Details                 text, 
  Notes                   text, 
  StatusID                text, 
  LastUpdated             text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(TypeID) REFERENCES Type(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CastStatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(CrewStatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(ConnectionID) REFERENCES Connection(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
  CREATE TABLE Series_Genre (
  ID          text NOT NULL, 
  SeriesID    text, 
  GenreID     text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(SeriesID) REFERENCES Series(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(GenreID) REFERENCES Genre(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
CREATE TABLE Series_Language (
  ID          text NOT NULL, 
  SeriesID     text, 
  LanguageID  text, 
  Details     text, 
  Notes       text, 
  StatusID    text, 
  LastUpdated text, 
  PRIMARY KEY (ID), 
  FOREIGN KEY(SeriesID) REFERENCES Series(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(LanguageID) REFERENCES Language(ID) ON UPDATE No action ON DELETE No action, 
  FOREIGN KEY(StatusID) REFERENCES Status(ID) ON UPDATE No action ON DELETE No action);
